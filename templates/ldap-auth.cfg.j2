########## CONFIGURATION ##########
# Some settings (those not commented out) have default values set. You
# don't need to include them in your configuration file unless you want
# to change these defaults.

# Uncomment to enable debugging to stderr (prints full client output
# and more).
#DEBUG=1

# Must be one of "curl" and "ldapsearch".
# NOTE:
# - When choosing "curl", make sure "curl --version | grep ldap" outputs
#   something. Otherwise, curl was compiled without LDAP support.
# - When choosing "ldapsearch", make sure the ldapwhoami command is
#   available as well, as that might be needed in some cases.
CLIENT="ldapsearch"

# Usernames should be validated using a regular expression to be of
# a known format. Special characters will be escaped anyway, but it is
# generally not recommended to allow more than necessary.
# This pattern is set by default. In your config file, you can either
# overwrite it with a different one or use "unset USERNAME_PATTERN" to
# disable validation completely.
USERNAME_PATTERN='^[a-z|A-Z|0-9|_|-|.]+$'
# Adapt to your needs.
SERVER="ldap://{{ openldap_server_domain_name }}:389"
# Will try binding as this user.
# ldap_dn_escape escapes special characters in strings to make them
# usable within LDAP DN components.
USERDN="uid=$username,{{ users_ou }}"
# If you want to take additional checks like requiring group memberships
# or fetch specific user attributes, you can execute a custom search, which
# has to return exactly one result in order for authentication to succeed.
# Uncomment the following lines to enable search query execution.
BASEDN="{{ users_ou }}"
SCOPE="one"
FILTER="(uid=$username)"
# Space-separated list of additional LDAP attributes to query.
# You could process them in your own on_auth_success hook.
#ATTRS="cn"

# When the timeout (in seconds) is exceeded (e.g. due to slow networking),
# authentication fails.
TIMEOUT=3

NAME_ATTR="cn"
ATTRS="$ATTRS $NAME_ATTR"

########## END OF CONFIGURATION ##########

########## SCRIPT CODE FOLLOWS, DON'T TOUCH ##########

on_auth_success() {
	# print the meta entries for use in HA
	if [ ! -z "$NAME_ATTR" ]; then
		name=$(echo "$output" | sed -nr "s/^\s*$NAME_ATTR:\s*(.+)\s*\$/\1/Ip")
		[ -z "$name" ] || echo "name=$name"
	fi
}
########## END OF CONFIGURATION ##########
